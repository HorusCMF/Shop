<?php

namespace Hetic\SiteBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Gedmo\Mapping\Annotation as Gedmo; // gedmo annotations


/**
 * Commercial
 * @ORM\Entity(repositoryClass="Hetic\SiteBundle\Repository\CommercialRepository")
 * @ORM\Table(name="commercial")
 * @ORM\HasLifecycleCallbacks()
 */
class Commercial
{

    public function __construct(){
        $this->datePublication = new \Datetime('now');
        $this->dateCreated = new \Datetime('now');
        $this->dateUpdated = new \Datetime('now');
        $this->isVisible = true;
        $this->offert = false;
        $this->remiseNet = 0;
        $this->remiseVar = 0;
    }


    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer", nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $id;

    /**
     * @ORM\Column(name="nature", type="integer", nullable=true)
     */
    private $nature;

    /**
     * @Assert\NotBlank(
     *     message = "Le titre ne doit pas etre vide"
     * )
     * @Assert\Length(
     *      min = "5",
     *      max = "1000",
     *      minMessage = "Votre titre doit faire au moins {{ limit }} caractères",
     *      maxMessage = "Votre titre ne peut pas être plus long que {{ limit }} caractères"
     * )
     * @ORM\Column(name="title", type="string", length=200, nullable=true)
     */
    private $title;


    /**
     * @Assert\NotBlank(
     *     message = "La description ne doit pas etre vide"
     * )
     * @Assert\Length(
     *      min = "5",
     *      max = "1000",
     *      minMessage = "Votre description doit faire au moins {{ limit }} caractères",
     *      maxMessage = "Votre description ne peut pas être plus long que {{ limit }} caractères"
     * )
     * @ORM\Column(name="content", type="text", nullable=true)
     */
    private $content;

    /**
     * @ORM\Column(name="remise_net", type="float", nullable=true)
     */
    private $remiseNet;

    /**
     * @ORM\Column(name="remise_var", type="float", nullable=true)
     */
    private $remiseVar;

    /**
     * @ORM\Column(name="offert", type="boolean", nullable=true)
     */
    private $offert;

    /**
     * @var string
     * @ORM\Column(name="datePublication", type="datetime", nullable=true)
     */
    private $datePublication;

    /**
     * @var string
     * @ORM\Column(name="isVisible", type="boolean", nullable=true)
     */
    private $isVisible;

    /**
     * @var string
     *
     * @ORM\Column(name="date_created", type="datetime", nullable=true)
     */
    private $dateCreated;


    /**
     * @var string
     * @Gedmo\Timestampable(on="update")
     * @ORM\Column(name="date_updated", type="datetime", nullable=true)
     */
    private $dateUpdated;


    /**
     * @ORM\ManyToOne(targetEntity="Category", inversedBy="commercials")
     * @ORM\JoinColumn(name="category_id", referencedColumnName="id")
     */
    private $category;


    /**
     * @ORM\ManyToOne(targetEntity="Produit", inversedBy="commercials")
     * @ORM\JoinColumn(name="produit_id", referencedColumnName="id")
     */
    private $produit;



    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set title
     *
     * @param string $title
     * @return Commercial
     */
    public function setTitle($title)
    {
        $this->title = $title;
        return $this;
    }

    /**
     * Get title
     *
     * @return string 
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Set content
     *
     * @param text $content
     * @return Commercial
     */
    public function setContent($content)
    {
        $this->content = $content;
        return $this;
    }

    /**
     * Get content
     *
     * @return text 
     */
    public function getContent()
    {
        return $this->content;
    }

    /**
     * Set datePublication
     *
     * @param datetime $datePublication
     * @return Commercial
     */
    public function setDatePublication($datePublication)
    {
        $this->datePublication = $datePublication;
        return $this;
    }

    /**
     * Get datePublication
     *
     * @return datetime 
     */
    public function getDatePublication()
    {
        return $this->datePublication;
    }

    /**
     * Set isVisible
     *
     * @param boolean $isVisible
     * @return Commercial
     */
    public function setIsVisible($isVisible)
    {
        $this->isVisible = $isVisible;
        return $this;
    }

    /**
     * Get isVisible
     *
     * @return boolean 
     */
    public function getIsVisible()
    {
        return $this->isVisible;
    }

    /**
     * Set dateCreated
     *
     * @param datetime $dateCreated
     * @return Commercial
     */
    public function setDateCreated($dateCreated)
    {
        $this->dateCreated = $dateCreated;
        return $this;
    }

    /**
     * Get dateCreated
     *
     * @return datetime 
     */
    public function getDateCreated()
    {
        return $this->dateCreated;
    }

    /**
     * Set dateUpdated
     *
     * @param datetime $dateUpdated
     * @return Commercial
     */
    public function setDateUpdated($dateUpdated)
    {
        $this->dateUpdated = $dateUpdated;
        return $this;
    }

    /**
     * Get dateUpdated
     *
     * @return datetime 
     */
    public function getDateUpdated()
    {
        return $this->dateUpdated;
    }

    /**
     * Set category
     *
     * @param Hetic\SiteBundle\Entity\Category $category
     * @return Commercial
     */
    public function setCategory(\Hetic\SiteBundle\Entity\Category $category = null)
    {
        $this->category = $category;
        return $this;
    }

    /**
     * Get category
     *
     * @return Hetic\SiteBundle\Entity\Category 
     */
    public function getCategory()
    {
        return $this->category;
    }

    /**
     * Set produit
     *
     * @param Hetic\SiteBundle\Entity\Produit $produit
     * @return Commercial
     */
    public function setProduit(\Hetic\SiteBundle\Entity\Produit $produit = null)
    {
        $this->produit = $produit;
        return $this;
    }

    /**
     * Get produit
     *
     * @return Hetic\SiteBundle\Entity\Produit 
     */
    public function getProduit()
    {
        return $this->produit;
    }

    /**
     * Set remiseNet
     *
     * @param float $remiseNet
     * @return Commercial
     */
    public function setRemiseNet($remiseNet)
    {
        $this->remiseNet = $remiseNet;
        return $this;
    }

    /**
     * Get remiseNet
     *
     * @return float 
     */
    public function getRemiseNet()
    {
        return $this->remiseNet;
    }

    /**
     * Set remiseVar
     *
     * @param float $remiseVar
     * @return Commercial
     */
    public function setRemiseVar($remiseVar)
    {
        $this->remiseVar = $remiseVar;
        return $this;
    }

    /**
     * Get remiseVar
     *
     * @return float 
     */
    public function getRemiseVar()
    {
        return $this->remiseVar;
    }

    /**
     * Set offert
     *
     * @param boolean $offert
     * @return Commercial
     */
    public function setOffert($offert)
    {
        $this->offert = $offert;
        return $this;
    }

    /**
     * Get offert
     *
     * @return boolean 
     */
    public function getOffert()
    {
        return $this->offert;
    }
}